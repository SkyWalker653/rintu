// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package tools.automation.bean;

import java.util.Calendar;
import java.util.Date;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import org.springframework.format.annotation.DateTimeFormat;
import tools.automation.bean.PmsmartAccessRequest;
import tools.automation.bean.RepositoryFolder;
import tools.automation.bean.RepositoryGroup;
import tools.automation.bean.RepositoryUserMap;
import tools.automation.bean.SvnRepository;
import tools.automation.bean.SvnRepositoryAccessText;
import tools.automation.bean.SvnRequestFileRestoration;
import tools.automation.bean.SvnRequestRepositoryAccess;
import tools.automation.bean.User;

privileged aspect SvnRepository_Roo_DbManaged {
    
    @OneToMany(mappedBy = "repository", cascade = CascadeType.ALL)
    private Set<PmsmartAccessRequest> SvnRepository.pmsmartAccessRequests;
    
    @OneToMany(mappedBy = "repository", cascade = CascadeType.ALL)
    private Set<RepositoryFolder> SvnRepository.repositoryFolders;
    
    @OneToMany(mappedBy = "repository", cascade = CascadeType.ALL)
    private Set<RepositoryGroup> SvnRepository.repositoryGroups;
    
    @OneToMany(mappedBy = "repository", cascade = CascadeType.ALL)
    private Set<RepositoryUserMap> SvnRepository.repositoryUserMaps;
    
    @OneToMany(mappedBy = "repository", cascade = CascadeType.ALL)
    private Set<SvnRepositoryAccessText> SvnRepository.svnRepositoryAccessTexts;
    
    @OneToMany(mappedBy = "repository", cascade = CascadeType.ALL)
    private Set<SvnRequestFileRestoration> SvnRepository.svnRequestFileRestorations;
    
    @OneToMany(mappedBy = "repository", cascade = CascadeType.ALL)
    private Set<SvnRequestRepositoryAccess> SvnRepository.svnRequestRepositoryAccesses;
    
    @ManyToOne
    @JoinColumn(name = "alternate_approver", referencedColumnName = "id")
    private User SvnRepository.alternateApprover;
    
    @ManyToOne
    @JoinColumn(name = "project_manager", referencedColumnName = "id", nullable = false)
    private User SvnRepository.projectManager;
    
    @ManyToOne
    @JoinColumn(name = "primary_approver", referencedColumnName = "id")
    private User SvnRepository.primaryApprover;
    
    @ManyToOne
    @JoinColumn(name = "spoc", referencedColumnName = "id", nullable = false)
    private User SvnRepository.spoc;
    
    @ManyToOne
    @JoinColumn(name = "Stage_1_approved", referencedColumnName = "id")
    private User SvnRepository.stage1Approved;
    
    @ManyToOne
    @JoinColumn(name = "Stage_2_approved", referencedColumnName = "id")
    private User SvnRepository.stage2Approved;
    
    @Column(name = "repo_id", length = 45)
    @NotNull
    private String SvnRepository.repoId;
    
    @Column(name = "incident_number", length = 45)
    @NotNull
    private String SvnRepository.incidentNumber;
    
    @Column(name = "repository_name", length = 90)
    @NotNull
    private String SvnRepository.repositoryName;
    
    @Column(name = "project_sap_code", length = 45)
    @NotNull
    private String SvnRepository.projectSapCode;
    
    @Column(name = "project_name", length = 90)
    @NotNull
    private String SvnRepository.projectName;
    
    @Column(name = "cmtool_user_count")
    @NotNull
    private Integer SvnRepository.cmtoolUserCount;
    
    @Column(name = "service_start_date")
    @NotNull
    @Temporal(TemporalType.DATE)
    @DateTimeFormat(style = "M-")
    private Date SvnRepository.serviceStartDate;
    
    @Column(name = "service_end_date")
    @Temporal(TemporalType.DATE)
    @DateTimeFormat(style = "M-")
    private Date SvnRepository.serviceEndDate;
    
    @Column(name = "purpose", length = 90)
    private String SvnRepository.purpose;
    
    @Column(name = "about_cmtass", length = 200)
    private String SvnRepository.aboutCmtass;
    
    @Column(name = "server")
    private Integer SvnRepository.server;
    
    @Column(name = "repo_created_by", length = 45)
    private String SvnRepository.repoCreatedBy;
    
    @Column(name = "repo_created_on")
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "MM")
    private Calendar SvnRepository.repoCreatedOn;
    
    @Column(name = "repository_uuid", length = 50)
    private String SvnRepository.repositoryUuid;
    
    @Column(name = "status", length = 45)
    @NotNull
    private String SvnRepository.status;
    
    @Column(name = "approved_access")
    private byte[] SvnRepository.approvedAccess;
    
    @Column(name = "accessfile_last_update_db")
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "MM")
    private Calendar SvnRepository.accessfileLastUpdateDb;
    
    @Column(name = "accessfile_last_update_server")
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "MM")
    private Calendar SvnRepository.accessfileLastUpdateServer;
    
    @Column(name = "is_repository_created")
    private Integer SvnRepository.isRepositoryCreated;
    
    @Column(name = "is_access_updated")
    private Integer SvnRepository.isAccessUpdated;
    
    @Column(name = "is_folders_created")
    private Integer SvnRepository.isFoldersCreated;
    
    public Set<PmsmartAccessRequest> SvnRepository.getPmsmartAccessRequests() {
        return pmsmartAccessRequests;
    }
    
    public void SvnRepository.setPmsmartAccessRequests(Set<PmsmartAccessRequest> pmsmartAccessRequests) {
        this.pmsmartAccessRequests = pmsmartAccessRequests;
    }
    
    public Set<RepositoryFolder> SvnRepository.getRepositoryFolders() {
        return repositoryFolders;
    }
    
    public void SvnRepository.setRepositoryFolders(Set<RepositoryFolder> repositoryFolders) {
        this.repositoryFolders = repositoryFolders;
    }
    
    public Set<RepositoryGroup> SvnRepository.getRepositoryGroups() {
        return repositoryGroups;
    }
    
    public void SvnRepository.setRepositoryGroups(Set<RepositoryGroup> repositoryGroups) {
        this.repositoryGroups = repositoryGroups;
    }
    
    public Set<RepositoryUserMap> SvnRepository.getRepositoryUserMaps() {
        return repositoryUserMaps;
    }
    
    public void SvnRepository.setRepositoryUserMaps(Set<RepositoryUserMap> repositoryUserMaps) {
        this.repositoryUserMaps = repositoryUserMaps;
    }
    
    public Set<SvnRepositoryAccessText> SvnRepository.getSvnRepositoryAccessTexts() {
        return svnRepositoryAccessTexts;
    }
    
    public void SvnRepository.setSvnRepositoryAccessTexts(Set<SvnRepositoryAccessText> svnRepositoryAccessTexts) {
        this.svnRepositoryAccessTexts = svnRepositoryAccessTexts;
    }
    
    public Set<SvnRequestFileRestoration> SvnRepository.getSvnRequestFileRestorations() {
        return svnRequestFileRestorations;
    }
    
    public void SvnRepository.setSvnRequestFileRestorations(Set<SvnRequestFileRestoration> svnRequestFileRestorations) {
        this.svnRequestFileRestorations = svnRequestFileRestorations;
    }
    
    public Set<SvnRequestRepositoryAccess> SvnRepository.getSvnRequestRepositoryAccesses() {
        return svnRequestRepositoryAccesses;
    }
    
    public void SvnRepository.setSvnRequestRepositoryAccesses(Set<SvnRequestRepositoryAccess> svnRequestRepositoryAccesses) {
        this.svnRequestRepositoryAccesses = svnRequestRepositoryAccesses;
    }
    
    public User SvnRepository.getAlternateApprover() {
        return alternateApprover;
    }
    
    public void SvnRepository.setAlternateApprover(User alternateApprover) {
        this.alternateApprover = alternateApprover;
    }
    
    public User SvnRepository.getProjectManager() {
        return projectManager;
    }
    
    public void SvnRepository.setProjectManager(User projectManager) {
        this.projectManager = projectManager;
    }
    
    public User SvnRepository.getPrimaryApprover() {
        return primaryApprover;
    }
    
    public void SvnRepository.setPrimaryApprover(User primaryApprover) {
        this.primaryApprover = primaryApprover;
    }
    
    public User SvnRepository.getSpoc() {
        return spoc;
    }
    
    public void SvnRepository.setSpoc(User spoc) {
        this.spoc = spoc;
    }
    
    public User SvnRepository.getStage1Approved() {
        return stage1Approved;
    }
    
    public void SvnRepository.setStage1Approved(User stage1Approved) {
        this.stage1Approved = stage1Approved;
    }
    
    public User SvnRepository.getStage2Approved() {
        return stage2Approved;
    }
    
    public void SvnRepository.setStage2Approved(User stage2Approved) {
        this.stage2Approved = stage2Approved;
    }
    
    public String SvnRepository.getRepoId() {
        return repoId;
    }
    
    public void SvnRepository.setRepoId(String repoId) {
        this.repoId = repoId;
    }
    
    public String SvnRepository.getIncidentNumber() {
        return incidentNumber;
    }
    
    public void SvnRepository.setIncidentNumber(String incidentNumber) {
        this.incidentNumber = incidentNumber;
    }
    
    public String SvnRepository.getRepositoryName() {
        return repositoryName;
    }
    
    public void SvnRepository.setRepositoryName(String repositoryName) {
        this.repositoryName = repositoryName;
    }
    
    public String SvnRepository.getProjectSapCode() {
        return projectSapCode;
    }
    
    public void SvnRepository.setProjectSapCode(String projectSapCode) {
        this.projectSapCode = projectSapCode;
    }
    
    public String SvnRepository.getProjectName() {
        return projectName;
    }
    
    public void SvnRepository.setProjectName(String projectName) {
        this.projectName = projectName;
    }
    
    public Integer SvnRepository.getCmtoolUserCount() {
        return cmtoolUserCount;
    }
    
    public void SvnRepository.setCmtoolUserCount(Integer cmtoolUserCount) {
        this.cmtoolUserCount = cmtoolUserCount;
    }
    
    public Date SvnRepository.getServiceStartDate() {
        return serviceStartDate;
    }
    
    public void SvnRepository.setServiceStartDate(Date serviceStartDate) {
        this.serviceStartDate = serviceStartDate;
    }
    
    public Date SvnRepository.getServiceEndDate() {
        return serviceEndDate;
    }
    
    public void SvnRepository.setServiceEndDate(Date serviceEndDate) {
        this.serviceEndDate = serviceEndDate;
    }
    
    public String SvnRepository.getPurpose() {
        return purpose;
    }
    
    public void SvnRepository.setPurpose(String purpose) {
        this.purpose = purpose;
    }
    
    public String SvnRepository.getAboutCmtass() {
        return aboutCmtass;
    }
    
    public void SvnRepository.setAboutCmtass(String aboutCmtass) {
        this.aboutCmtass = aboutCmtass;
    }
    
    public Integer SvnRepository.getServer() {
        return server;
    }
    
    public void SvnRepository.setServer(Integer server) {
        this.server = server;
    }
    
    public String SvnRepository.getRepoCreatedBy() {
        return repoCreatedBy;
    }
    
    public void SvnRepository.setRepoCreatedBy(String repoCreatedBy) {
        this.repoCreatedBy = repoCreatedBy;
    }
    
    public Calendar SvnRepository.getRepoCreatedOn() {
        return repoCreatedOn;
    }
    
    public void SvnRepository.setRepoCreatedOn(Calendar repoCreatedOn) {
        this.repoCreatedOn = repoCreatedOn;
    }
    
    public String SvnRepository.getRepositoryUuid() {
        return repositoryUuid;
    }
    
    public void SvnRepository.setRepositoryUuid(String repositoryUuid) {
        this.repositoryUuid = repositoryUuid;
    }
    
    public String SvnRepository.getStatus() {
        return status;
    }
    
    public void SvnRepository.setStatus(String status) {
        this.status = status;
    }
    
    public byte[] SvnRepository.getApprovedAccess() {
        return approvedAccess;
    }
    
    public void SvnRepository.setApprovedAccess(byte[] approvedAccess) {
        this.approvedAccess = approvedAccess;
    }
    
    public Calendar SvnRepository.getAccessfileLastUpdateDb() {
        return accessfileLastUpdateDb;
    }
    
    public void SvnRepository.setAccessfileLastUpdateDb(Calendar accessfileLastUpdateDb) {
        this.accessfileLastUpdateDb = accessfileLastUpdateDb;
    }
    
    public Calendar SvnRepository.getAccessfileLastUpdateServer() {
        return accessfileLastUpdateServer;
    }
    
    public void SvnRepository.setAccessfileLastUpdateServer(Calendar accessfileLastUpdateServer) {
        this.accessfileLastUpdateServer = accessfileLastUpdateServer;
    }
    
    public Integer SvnRepository.getIsRepositoryCreated() {
        return isRepositoryCreated;
    }
    
    public void SvnRepository.setIsRepositoryCreated(Integer isRepositoryCreated) {
        this.isRepositoryCreated = isRepositoryCreated;
    }
    
    public Integer SvnRepository.getIsAccessUpdated() {
        return isAccessUpdated;
    }
    
    public void SvnRepository.setIsAccessUpdated(Integer isAccessUpdated) {
        this.isAccessUpdated = isAccessUpdated;
    }
    
    public Integer SvnRepository.getIsFoldersCreated() {
        return isFoldersCreated;
    }
    
    public void SvnRepository.setIsFoldersCreated(Integer isFoldersCreated) {
        this.isFoldersCreated = isFoldersCreated;
    }
    
}
